"use strict";class Visuals{#e='<div class="calendar__day calendar__day--empty"></div>';#t='<div class="calendar__events-msg">Peace and quiet...</div>';#a;start(){this.renderMonth(Logic.currentMonth,Logic.currentYear),this.getTodayElement(),this.markPresentDay(),this.chillDayOrNot(),this.makePassedDaysDim(),this.showEventfulDays(),this.autoRefresh()}getTodayElement(){this.#a=document.querySelectorAll(".calendar__day--real")[Logic.getToday().day-1]}renderMonth(e="",t=""){this.renderTitle(),lastDayNum=Logic.getLastDay(),firstDayName=Logic.getFirstDayName(),emptyDaysNumBeginning=this.getEmptyCells("beginning"),emptyDaysNumEnd=this.getEmptyCells("end"),this.createDaysElements(lastDayNum)}renderTitle(){calendarMonth.innerText=Logic.currentMonth,calendarYear.innerText=Logic.currentYear}getEmptyCells(e){if("beginning"===e)return Logic.getWeekdays().indexOf(firstDayName);if("end"===e){return 7-(new Date(`${Logic.currentYear} ${Logic.currentMonth} ${lastDayNum}`).getDay()+1)}}emptyMonth(){calendarDaysBox.innerHTML=""}emptyEventList(){calendarEventList.innerHTML=""}createDaysElements(e){this.emptyMonth();for(let t=0;t<e;t++){const a=`<div class="calendar__day calendar__day--real">${t+1}</div>`;if(0!==t)if(t!==e-1)calendarDaysBox.insertAdjacentHTML("beforeend",a);else{calendarDaysBox.insertAdjacentHTML("beforeend",a);for(let e=0;e<emptyDaysNumEnd;e++)calendarDaysBox.insertAdjacentHTML("beforeend",this.#e)}else{for(let e=0;e<emptyDaysNumBeginning;e++)calendarDaysBox.insertAdjacentHTML("beforeend",this.#e);calendarDaysBox.insertAdjacentHTML("beforeend",a)}}}markPresentDay(){`${Logic.getToday().month} ${Logic.getToday().year}`==`${calendarMonth.innerText} ${calendarYear.innerText}`&&this.getTodayElement(),this.#a.classList.add("calendar__present-day")}chillDayOrNot(){if(Logic.getToday().weekday===Logic.chillDay){const e='<div class="calendar__msg">IT\'S CHILL TIME!</div>';return this.getTodayElement(),this.#a.classList.add("calendar__chillday"),void calendarBlock.insertAdjacentHTML("afterend",e)}}makePassedDaysDim(){const e=Logic.currentDay,t=[...document.querySelectorAll(".calendar__day--real")];for(let a=0;a<31&&t.length!==e-1;a++)t.pop();t.forEach((e=>e.classList.add("calendar__day--passed"))),document.querySelectorAll(".calendar__day--empty").forEach((e=>e.classList.add("calendar__day--passed")))}markEventfulDays(e){document.querySelectorAll(".calendar__day--real")[e-1].classList.add("calendar__day--eventful")}showMsgIfNoEvents(e){document.querySelector(".calendar__events-msg")&&document.querySelector(".calendar__events-msg").remove(),0!==e.length||document.querySelector(".calendar__event-title").insertAdjacentHTML("afterend",this.#t)}createEventElements(e,t){const a=`<li class="calendar__event-box">\n        <div class="calendar__event-wrapper">\n        <div class="calendar__event-item"><span>${calendarMonth.innerText.slice(0,3)} <span>${e}</span>:</span> ${t}</div>\n        <div class="calendar__event-item-btns">\n            <button class="calendar__event-item-btn calendar__event-item-btn--edit">‚úèÔ∏è</button>\n            <button class="calendar__event-item-btn calendar__event-item-btn--del">üóë</button>\n        </div>\n        </div>\n        <div class="calendar__event-tip">${t}</div>\n        </li>`;calendarEventList.insertAdjacentHTML("beforeend",a)}showEventfulDays(){const e=Logic.getEventsThisMonth();this.emptyEventList(),this.showMsgIfNoEvents(e),e.forEach((e=>{const t=new Date(e.date).getDate();this.markEventfulDays(t),this.createEventElements(t,e.event)})),this.showEventPopup()}showEventPopup(){document.querySelectorAll(".calendar__event-item").forEach((e=>e.addEventListener("mouseover",(function(t){if(e.innerText.length<=38)return;const a=t.target.closest(".calendar__event-box");setTimeout((()=>{a.querySelector(".calendar__event-tip").classList.add("active")}),1e3)})))),document.querySelectorAll(".calendar__event-item").forEach((e=>e.addEventListener("mouseout",(function(t){if(e.innerText.length<=38)return;const a=t.target.closest(".calendar__event-box");setTimeout((()=>{a.querySelector(".calendar__event-tip").classList.remove("active")}),300)}))))}getEventInfo(e){const t=e.target.closest(".calendar__event-box").querySelector(".calendar__event-item").innerText.slice(e.target.closest(".calendar__event-box").querySelector(".calendar__event-item").innerText.indexOf(":")+2),a=e.target.closest(".calendar__event-box").querySelector(".calendar__event-item").innerText.slice(0,e.target.closest(".calendar__event-box").querySelector(".calendar__event-item").innerText.indexOf(":")),n=+a.slice(-2).trim();return[t,a,n]}getDayInfo(e){const t=`${e.innerText} ${calendarMonth.innerText} ${calendarYear.innerText}`,a=+t.slice(0,2).trim();return[t,a,`${new Date(t).getDate().toString().padStart(2,0)}.${(new Date(t).getMonth()+1).toString().padStart(2,0)}.${new Date(t).getFullYear()}`]}toggleForm(e){if("hide"===e)return calendarForm.classList.add("removed"),calendarInput.blur(),setTimeout((()=>{calendarForm.classList.remove("removed"),calendarForm.classList.remove("active")}),50),void(calendarInput.value="");"show"===e&&(calendarForm.classList.add("active"),calendarInput.value=Logic.getAllEvents()[editedItemIndex]?.event||"",calendarInput.focus())}detectClickOutsideForm(e){const t=this;document.addEventListener("click",(function(e){e.target.closest(".calendar__element")||e.target.closest(".calendar__events")||t.toggleForm("hide")}))}editEvent(e){const[t,a,n]=this.getEventInfo(e);editedItemIndex=Logic.getNeededIndex(t),this.toggleForm("show"),clickedDay=document.querySelectorAll(".calendar__day--real")[n-1],calendarFormTitle.innerHTML=`Editing event for: <span>${a}</span>`}deleteEvent(e){const t=e.target.closest(".calendar__event-box"),a=prompt("Delete this event?\n    Type Y for Yes\n    Type N for No");if("n"!==a.toLowerCase()&&"y"===a.toLowerCase()){t.remove();const[a,n,r]=this.getEventInfo(e);document.querySelectorAll(".calendar__day--real")[r-1].classList.remove("calendar__day--eventful");const s=Logic.getNeededIndex(a);Logic.deleteLocally(s)}}showError(){calendarNotification.classList.add("active"),setTimeout((()=>{calendarNotification.classList.remove("active")}),4e3)}autoRefresh(){setTimeout((()=>{location.reload()}),36e5),console.log(`page refreshed at ${Logic.getToday().hours}:${Logic.getToday().minutes}`)}}