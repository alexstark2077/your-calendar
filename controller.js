"use strict";const calendarBlock=document.querySelector(".calendar__element"),calendarMonth=document.querySelector(".calendar__month"),calendarYear=document.querySelector(".calendar__year"),calendarDaysBox=document.querySelector(".calendar__days"),calendarBtnsBox=document.querySelector(".calendar__controls"),calendarEventsBlock=document.querySelector(".calendar__events"),calendarInput=document.querySelector(".calendar__input"),calendarForm=document.querySelector(".calendar__form"),calendarFormDate=document.querySelector(".calendar__form-title span"),calendarFormTitle=document.querySelector(".calendar__form-title"),calendarNotification=document.querySelector(".calendar__notification"),calendarEventList=document.querySelector(".calendar__event-list"),calendarBackToBtn=document.querySelector(".calendar__back-to");let clickedDay,clickedDate,editedItemIndex,currentMonth,currentYear,emptyDaysNumBeginning,emptyDaysNumEnd,lastDayNum,firstDayName;const Logic=new App,Visual=new Visuals;Logic.start(),Visual.start(),calendarBtnsBox.addEventListener("click",(function(e){const a=e.target;a.classList.contains("calendar__btn--prev")&&Logic.changeMonthAndYear("prev"),a.classList.contains("calendar__btn--next")&&Logic.changeMonthAndYear("next"),Visual.renderMonth(Logic.currentMonth,Logic.currentYear),Visual.showEventfulDays(),calendarBackToBtn.classList.remove("hidden"),document.querySelectorAll(".calendar__day").forEach((e=>e.classList.remove("calendar__present-day"))),calendarMonth.innerText+calendarYear.innerText===Logic.getToday().month+Logic.getToday().year&&(document.querySelectorAll(".calendar__day--real")[Logic.currentDay-1].classList.add("calendar__present-day"),Visual.makePassedDaysDim(),calendarBackToBtn.classList.add("hidden"))})),calendarDaysBox.addEventListener("click",(function(e){const a=e.target;if(!a.classList.contains("calendar__day--real"))return;const[n,t,c]=Visual.getDayInfo(a);clickedDate=n,clickedDay=a,Visual.toggleForm("show"),document.querySelector(".calendar__form-title").innerHTML=`Add new event for <span>${document.querySelector(".calendar__month").innerText} ${t}</span>:`,Visual.detectClickOutsideForm(e)})),calendarForm.addEventListener("submit",(function(e){if(e.preventDefault(),calendarInput.value.length<=3)Visual.showError();else{if(calendarFormTitle.innerHTML.includes("Editing event for:"))return Logic.getAllEvents()[editedItemIndex].event=calendarInput.value,Logic.saveLocally(),Visual.showEventfulDays(),Visual.toggleForm("hide"),void(calendarFormTitle.innerHTML="Add new event for <span></span>:");Logic.pushNewEvent(),Visual.toggleForm("hide"),clickedDay.classList.add("calendar__day--eventful"),Logic.saveLocally(),Visual.showEventfulDays()}})),calendarEventList.addEventListener("click",(function(e){const a=e.target;a.classList.contains("calendar__event-item-btn")&&(a.classList.contains("calendar__event-item-btn--edit")&&(Visual.editEvent(e),Visual.detectClickOutsideForm(e)),a.classList.contains("calendar__event-item-btn--del")&&(Visual.deleteEvent(e),Visual.showMsgIfNoEvents(Visual.getEventsThisMonth())))})),calendarBackToBtn.addEventListener("click",(function(e){e.preventDefault(),Logic.currentMonth=Logic.getToday().month,Logic.currentMonthNum=Logic.getToday().monthNum,Logic.currentYear=Logic.getToday().year,Visual.renderMonth(Logic.currentMonth,Logic.currentYear),Visual.showEventfulDays(),document.querySelectorAll(".calendar__day").forEach((e=>e.classList.remove("calendar__present-day"))),document.querySelectorAll(".calendar__day--real")[Logic.currentDay-1].classList.add("calendar__present-day"),Visual.makePassedDaysDim(),calendarBackToBtn.classList.add("hidden")}));